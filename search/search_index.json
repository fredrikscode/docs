{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>This is a place for me to collect my personal documentation and scripts. Feel free to use anything as you wish :)</p>"},{"location":"guides/setup-arch-linux/","title":"Setup Arch Linux","text":"<ol> <li>Verify that we've booted into EFI mode: <code>efivar -L</code></li> <li>Set keymap. For Swedish: <code>loadkeys sv-latin1</code></li> <li>Ensure internet access through ethernet or WiFi.<ol> <li>To connect to WiFi, use: <code>wifi-menu</code></li> </ol> </li> <li>Enable NTP: <code>timedatectl set-ntp true</code></li> <li>Sort mirrors by rate: <code>reflector -c Sweden --sort rate --save /etc/pacman.d/mirrorlist</code></li> <li>sed -i '//#ParallelDownloads = 5/s/^#/g' /etc/pacman.conf</li> <li>Sync mirrors: <code>pacman -Syyy</code></li> <li>Setup 500MB EFI, Whatever (5GB) swap, rest is a linux filesystem partition</li> <li>mkfs.fat -F32 /dev/vda1</li> <li>mkswap /dev/vda2</li> <li>swapon /dev/vda2</li> <li>mkfs.btrfs /dev/vda3</li> <li>mount /dev/vda3 /mnt</li> <li>Create subvolumes:</li> <li>btrfs su cr /mnt/@</li> <li>btrfs su cr /mnt/@home</li> <li>btrfs su cr /mnt/@root</li> <li>btrfs su cr /mnt/@log</li> <li>btrfs su cr /mnt/@cache</li> <li>btrfs su cr /mnt/@tmp</li> <li>umount /mnt</li> <li>Create directories</li> <li>mkdir /mnt/home</li> <li>mkdir /mnt/root</li> <li>mkdir /mnt/tmp</li> <li>mkdir -p /mnt/var/log</li> <li>mkdir -p /mnt/var/cache</li> <li>Mount subvolumes</li> <li>mount -o defaults,noatime,compress=zstd,commit=120,subvol=@ /dev/vda3 /mnt</li> <li>mount -o defaults,noatime,compress=zstd,commit=120,subvol=@home /dev/vda3 /mnt/home</li> <li>mount -o defaults,noatime,compress=zstd,commit=120,subvol=@home /dev/vda3 /mnt/root</li> <li>mount -o defaults,noatime,compress=zstd,commit=120,subvol=@home /dev/vda3 /mnt/var/log</li> <li>mount -o defaults,noatime,compress=zstd,commit=120,subvol=@home /dev/vda3 /mnt/var/cache</li> <li>mount -o defaults,noatime,compress=zstd,commit=120,subvol=@home /dev/vda3 /mnt/tmp</li> <li>mkdir -p /mnt/boot/efi</li> <li>mount /dev/vda1 /mnt/boot/efi</li> <li>pacstrap /mnt base base-devel linux linux-firmware vim btrfs-progs intel-ucode</li> <li>genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</li> <li>arch-chroot /mnt</li> <li>ln -sf /usr/share/zoneinfo/Europe/Stockholm /etc/localtime</li> <li>hwclock --systohc</li> <li>Enable en_US.UTF-8: vim /etc/locale.gen /// locale-gen</li> <li>locale-gen</li> <li>echo LANG=en_US.UTF-8 &gt; /etc/locale.conf</li> <li>echo KEYMAP=sv-latin1 &gt; /etc/vconsole.conf</li> <li>echo archbox &gt; /etc/hostname</li> <li>echo \"127.0.0.1     localhost\" &gt;&gt; /etc/hosts</li> <li>echo \"::1           localhost\" &gt;&gt; /etc/hosts</li> <li>echo \"127.0.0.1     archbox.localdomain archbox</li> <li>pacman -S networkmanager</li> <li>systemctl enable NetworkManager</li> <li>passwd for root</li> <li>pacman -S grub efibootmgr</li> <li>grub-install --target=x86_64-efi --efi-directory=/boot/efi</li> <li>grub-mkconfig -o /boot/grub/grub.cfg</li> <li>umount -R /mnt</li> <li>reboot</li> <li>useradd -m -g users -G audio,video,network,wheel,storage,rfkill -s /bin/bash fredrik</li> <li>passwd fredrik</li> <li>EDITOR=vim visudo --- uncomment wheel stuff</li> <li>login as fredrik</li> <li>sudo vim /etc/pacman.conf - Fix paralleldownloads</li> <li>pacman -S xorg-server xorg-apps xorg-xinit alacritty sddm</li> </ol>"},{"location":"guides/setup-arch-linux/#material-harddisk-partitioning","title":":material-harddisk: Partitioning","text":"<ol> <li>Run gdisk on the disk you're installing to: <code>gdisk /dev/sdX</code></li> <li>Type <code>x</code> then <code>Enter</code>, <code>z</code> then <code>Enter</code> and choose to proceed.</li> <li>If the question \"Blank out MBR?\" comes up then choose <code>yes</code>.</li> <li>Run <code>cgdisk /dev/sdX</code></li> </ol> Partition Size Type Name <code>/boot</code> 1024Mib EF00 boot <code>swap</code> 16GiB 8200 swap <code>/</code> 100GiB 8300 root <code>/home</code> Method Description <code>GET</code> :material-check:     Fetch resource <code>PUT</code> :material-check-all: Update resource <code>DELETE</code> :material-close:     Delete resource"},{"location":"guides/setup-arch-linux/#octicons-package-24-packages","title":":octicons-package-24: Packages","text":"<ul> <li> <p>Base installation</p> <ul> <li>os-prober: Spinoff of debian-installer. One feature is that it can probe disks for other operating systems and add them to the bootloader.</li> <li>xorg: Display server, graphical output such as renedering GUI.</li> <li>xorg-xrdb: To enable autostarting with Awesome.</li> <li>dex: Same as above</li> <li>yay:<ul> <li>sudo git clone https://aur.archlinux.org/yay-git.git /opt</li> <li>sudo chown -R user:group /opt/yay-git</li> <li>cd /opt/yay-git</li> <li>makepkg -si</li> </ul> </li> <li>nvidia/nvidia-lts</li> <li>nitrogen</li> <li>mtools (?): A collection of utilities to access MS-DOS disks from GNU and Unix without mounting them</li> <li>lvm2</li> <li>linux/linux-lts</li> <li>linux-headers/linux-lts-headers</li> <li>intel-ucode/amd-ucode</li> <li>efibootmgr</li> <li>dosfstools</li> <li>base</li> <li>base-devel</li> <li>xorg-xrandr</li> <li>zsh</li> <li>zsh-completions-git (AUR)</li> <li>neovim</li> <li>brave-bin (AUR)</li> <li>stow - Config management of dotfiles</li> <li>imagemagick - CLI screenshots</li> <li>betterlockscreen (AUR)</li> <li>polybar-spotify-module (AUR)</li> <li>snapper - BTRFS subvolume management</li> </ul> </li> <li> <p>LightDM</p> <ul> <li>lightdm</li> <li>lightdm-gtk-greeter</li> </ul> </li> <li> <p>Awesome WM</p> <ul> <li>awesome-git (AUR)</li> </ul> </li> <li> <p>Customization/Theming/Utilities</p> <ul> <li>rofi</li> <li>rofi-emoji</li> <li>rofi-calc</li> <li>picom-jonaburg-git (which version? animations are cool)</li> <li>powerlevel10k (AUR)</li> <li>dunst + libnotify</li> </ul> </li> <li> <p>Just apps</p> <ul> <li>caprine (messenger)</li> </ul> </li> <li> <p>spotify keys</p> </li> <li> <p>Change default shell:</p> <ul> <li>chsh -s /bin/zsh</li> </ul> </li> <li> <p>Check keys for keybinding:</p> <ul> <li>sudo showkey -a (ctrl+D to exit)</li> </ul> </li> <li> <p>Check rc.lua for config errors:</p> <ul> <li>awesome -k</li> </ul> </li> </ul>"}]}